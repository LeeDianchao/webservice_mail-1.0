
package mail;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "mail_send", targetNamespace = "http://Mail")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MailSend {


    /**
     * 
     * @param payload
     * @param url
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "sendEmailBatchReturn", targetNamespace = "http://Mail")
    @RequestWrapper(localName = "sendEmailBatch", targetNamespace = "http://Mail", className = "mail.SendEmailBatch")
    @ResponseWrapper(localName = "sendEmailBatchResponse", targetNamespace = "http://Mail", className = "mail.SendEmailBatchResponse")
    public boolean sendEmailBatch(
        @WebParam(name = "url", targetNamespace = "http://Mail")
        List<String> url,
        @WebParam(name = "payload", targetNamespace = "http://Mail")
        String payload);

    /**
     * 
     * @param payload
     * @param url
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "sendEmailReturn", targetNamespace = "http://Mail")
    @RequestWrapper(localName = "sendEmail", targetNamespace = "http://Mail", className = "mail.SendEmail")
    @ResponseWrapper(localName = "sendEmailResponse", targetNamespace = "http://Mail", className = "mail.SendEmailResponse")
    public boolean sendEmail(
        @WebParam(name = "url", targetNamespace = "http://Mail")
        String url,
        @WebParam(name = "payload", targetNamespace = "http://Mail")
        String payload);

    /**
     * 
     * @param url
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "validateEmailAddressReturn", targetNamespace = "http://Mail")
    @RequestWrapper(localName = "validateEmailAddress", targetNamespace = "http://Mail", className = "mail.ValidateEmailAddress")
    @ResponseWrapper(localName = "validateEmailAddressResponse", targetNamespace = "http://Mail", className = "mail.ValidateEmailAddressResponse")
    public boolean validateEmailAddress(
        @WebParam(name = "url", targetNamespace = "http://Mail")
        String url);

    /**
     * 
     * @param urls
     * @param payload
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "sendEmailsReturn", targetNamespace = "http://Mail")
    @RequestWrapper(localName = "sendEmails", targetNamespace = "http://Mail", className = "mail.SendEmails")
    @ResponseWrapper(localName = "sendEmailsResponse", targetNamespace = "http://Mail", className = "mail.SendEmailsResponse")
    public boolean sendEmails(
        @WebParam(name = "urls", targetNamespace = "http://Mail")
        String urls,
        @WebParam(name = "payload", targetNamespace = "http://Mail")
        String payload);

}
